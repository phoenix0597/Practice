# Библиотека marisa-trie
# Предоставляет эффективную реализацию компактных деревьев префиксов в Python.
# Она может быть полезна при работе с большими объёмами данных, например словарями или наборами строк.
# Библиотека marisa-trie обладает высокой производительностью и экономично использует память.
#
# Пример работы с библиотекой marisa-trie

import marisa_trie

# Создание экземпляра дерева префиксов
trie = marisa_trie.Trie(["apple", "banana", "orange", "app"])

# Проверка наличия элементов
print("apple" in trie)  # Вывод: True
print("pear" in trie)  # Вывод: False

# Получение значения элемента
print(trie["banana"])  # Вывод: banana

# Поиск всех элементов с заданным префиксом
prefixes = trie.items("app")
print(list(prefixes))  # Вывод: [('app', 0), ('apple', 3)]

# Автодополнение
suggestions = trie.keys("app")
print(list(suggestions))  # Вывод: ['app', 'apple']

# В этом примере мы:
#
# создали дерево префиксов с помощью marisa-trie,
# проверили наличие элементов,
# получили значение элемента,
# выполнили поиск элементов с заданным префиксом,
# получили автодополнение для заданной последовательности символов.
#
# Обратите внимание:
# при использовании библиотеки marisa-trie строки должны быть предварительно отсортированы
# для достижения оптимальной производительности и экономии памяти.
